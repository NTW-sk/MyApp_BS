AWSTemplateFormatVersion: '2010-09-09'
Description: Network stack

Parameters:
  EnvironmentName:
    Type: String
    Description: Name of the environment (e.g., Dev, Staging, Prod)
  
  VpcCidr:
    Type: String
    Default: 10.1.0.0/16
    Description: CIDR block for the VPC
  
  PublicSubnetCidr:
    Type: String
    Default: 10.1.1.0/24
    Description: CIDR block for the Public Subnet
  
  PrivateSubnetCidr:
    Type: String
    Default: 10.1.2.0/24
    Description: CIDR block for the Private Subnet

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-VPC"

  # Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${EnvironmentName}-IGW"
 
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref MyVPC

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PublicSubnet"

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PrivateSubnet"

  # Route Table for Public Subnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PublicRouteTable"

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Route Table for Private Subnet
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PrivateRouteTable"

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VpcId:
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${EnvironmentName}-VpcId"

  PublicSubnetId:
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${EnvironmentName}-PublicSubnetId"

  PrivateSubnetId:
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${EnvironmentName}-PrivateSubnetId"

  PublicRouteTableId:
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub "${EnvironmentName}-PublicRouteTableId"

  PrivateRouteTableId:
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub "${EnvironmentName}-PrivateRouteTableId"
  