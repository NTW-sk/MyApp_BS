AWSTemplateFormatVersion: '2010-09-09'
Description: Application stack

Parameters:
  VpcId:
    Type: String
  PublicSubnetId:
    Type: String
  PrivateSubnetId:
    Type: String
  ImageID:
    Type: String
    Default: ami-04d3ba818c434b384
  MyIpAddressPublicServer22:
    Type: String
    Default: "0.0.0.0/0"
  MyIpAddressPublicServer80:
    Type: String
    Default: "0.0.0.0/0"
  MyIpAddressPrivateServer22:
    Type: String
    Default: "0.0.0.0/0"
  MyIpAddressPrivateServer80:
    Type: String
    Default: "0.0.0.0/0"
  KeyName:
    Description: SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: existing EC2 KeyPair.
    
Resources:
  # Public EC2 Instance
  PublicEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref ImageID
      SubnetId: !Ref PublicSubnetId
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref PublicInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: MyApp_WebServer

  # Private EC2 Instance
  PrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref ImageID
      SubnetId: !Ref PrivateSubnetId
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref PrivateInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: MyApp_AppServer
  
  MyEIP:
    Type: 'AWS::EC2::EIP'

  MyEIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties: 
      InstanceId: !Ref PublicEC2Instance
      EIP: !Ref MyEIP

  # Security Group for Public EC2 Instance
  PublicInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIpAddressPublicServer22
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIpAddressPublicServer80
        - IpProtocol: tcp
          FromPort: 3128
          ToPort: 3128
          CidrIp: !Ref MyIpAddressPublicServer80
          description: Squid Proxy

  # Security Group for Private EC2 Instance
  PrivateInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic from Public EC2 Instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 65535
          ToPort: 65535
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup
          description: Ansible
        - IpProtocol: tcp
          FromPort: 3128
          ToPort: 3128
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup
          description: Squid Proxy